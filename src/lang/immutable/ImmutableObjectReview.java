package lang.immutable;

public class ImmutableObjectReview {
    /*
    모든 클래스를 불변으로 만드는 것은 아니다.
    우리가 만드는 대부분의 클래스는 값을 변경할 수 있게 만들어진다. 예를 들어서 회원 클래스의 경우 회원의 여러 속성을 변경할 수 있
    어야 한다. 가변 클래스가 더 일반적이고, 불변 클래스는 값을 변경하면 안되는 특별한 경우에 만들어서 사용한다고 생각하면 된다. 때
    로는 같은 기능을 하는 클래스를 하나는 불변으로 하나는 가변으로 각각 만드는 경우도 있다.
    */
    /*
    클래스를 불변으로 설계하는 이유는 더 많다.
    - 캐시 안정성
    - 멀티 쓰레드 안정성
    - 엔티티의 값 타입
    */
    /*
    지금은 이런 부분을 다 이해할 수 없다. 관련 내용을 학습하다 보면 자연스럽게 이번에 배운 불변 객체가 떠오르면서 관련된 내용을 본
    질적으로 더 잘 이해할 수 있을 것이다. 프로그래밍을 더 깊이있게 학습할수록 다양한 불변 클래스 이용사례를 만나고 이해하게 된다.
    따라서 지금은 불변 클래스가 어디에 사용되고, 어떻게 활용되는지 보다는 불변 클래스의 원리를 이해하는 정도면 충분하다.
    */


}
